
/* Workshop 6 at_home: Class with a Resource
File: Reflect.txt
Name:      Leny Fe Fernandez
email : lffernandez@myseneca.ca
Student#:  120818174
Course and Section : OOP244SII
*/
1. Does the Hero class need to know about the existence of the SuperHero
class? (Hint: do a search in Hero.cpp, does the word “SuperHero” appear
anywhere?)
* NO. Since the Hero class is the base class, it does not need to know the existence of the SuperHero class.

2. Does the SuperHero class need to know about the existence of the Hero
class? (Hint: do a search in SuperHero.cpp, does the word “Hero” appear
anywhere?)
* Yes. The SUperHero class needs to know about the existence of the Hero class because the Hero Class is the parent class of the SuperHero class.

3. The program prints out “Ancient Battle!” when 2 Heroes fight. It prints out
“Super Fight!” when 2 SuperHeroes fight. When you tried to make a Hero
fight a SuperHero, what did it print out?
* It print out " Ancient Battle!". The implementation of operator * in Hero class is being called since Hero is the base class. 

4. True or False: are the following definitions for main valid?
int main() {
Hero("Achilles", 20, 6) * Hero("Hector", 30, 5);
}

* TRUE. The definition is Valid.
how about this?
int main() {
(Hero("Achilles", 20, 6) * Hero("Hector", 30, 5))
*
(Hero("Atalanta", 10, 3) * Hero("Hippolyta", 10, 2));
}

* TRUE. The definition is Valid.

Quiz 7 Reflection:
1.  What is the output of the Program?
#include <iostream>
   using namespace std;
     class Shape {
     protected:
        int width, height;
             public:
        Shape( int a = 0, int b = 0){
           width = a;
           height = b;
        }
        int area() {
           cout << "Parent class area :" <<endl;
           return 0;
        }  };
  class Rectangle: public Shape {
     public:
        Rectangle( int a = 0, int b = 0):Shape(a, b) { }
        int area () {
            cout << "Rectangle class area :" <<endl;
           return (width * height);
         }  };
    class Triangle: public Shape {
     public:
        Triangle( int a = 0, int b = 0):Shape(a, b) { }
        int area () {
            cout << "Triangle class area :" <<endl;
           return (width * height / 2);
         }  };
    // Main function for the program
  int main() {
     Shape *shape;
     Rectangle rec(10,7);
     Triangle  tri(10,5);
       // store the address of Rectangle
     shape = &rec;
          // call rectangle area.
     shape->area();
       // store the address of Triangle
     shape = &tri;
          // call triangle area.
     shape->area();
     return 0;
  }
* Answer: Parent class area :
	  Parent class area :